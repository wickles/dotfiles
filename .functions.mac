#!/bin/bash

## Mac specific fuctions


## Utility functions
# fix app store being retarded by killing all the shit
alias fix-appstore="pkill storedownload storeasset storeacc storeuid storeleg storeinst"
# fix Dock and/or Launchpad
alias fix-dock="killall Dock"
# reload hosts file -- must be run with sudo
alias reload-hosts="{ dscacheutil -flushcache; killall -HUP mDNSResponder; }"
# open file in Preview
alias Preview="open -aPreview"


## Homebrew extra functions

alias brew-fmla-upgrade="brew upgrade --formula"
alias brew-cask-upgrade="brew upgrade --cask"
alias brew-fmla-outdated="brew outdated --formula"
alias brew-cask-outdated="brew outdated --cask --greedy --verbose | grep -v latest"
alias brew-cask-outdated-latest="brew outdated --cask --greedy --verbose | grep --color=never latest"
alias brew-fmla-df="du -sh $(brew --prefix)/Cellar/*/* $(brew --prefix)/Cellar | sort -h"
alias brew-cask-df="du -sh $(brew --prefix)/Caskroom/*/* $(brew --prefix)/Caskroom | sort -h"
alias brew-cask-relics="brew list --cask --versions"

# list installed casks not found in repository (renamed, migrated, or removed)
brew-fmla-missing () {
    local installed="$(brew list --formula --full-name -1)"
    local available="$(brew formulae)"
    while read line; do
        if ! [[ $available =~ (^|[[:space:]])$line($|[[:space:]]) ]]; then
            #brew list --cask --versions "$line"
            echo "$line"
        fi
    done <<< "$installed"
}

# list installed casks not found in repository (renamed, migrated, or removed)
brew-cask-missing () {
    local installed="$(brew list --cask --full-name -1)"
    local available="$(brew search --cask)"
    while read line; do
        if ! [[ $available =~ (^|[[:space:]])$line($|[[:space:]]) ]]; then
            #brew list --cask --versions "$line"
            echo "$line"
        fi
    done <<< "$installed"
}

# helper function for scrubbing casks
# (Deprecated, because homebrew-cask no longer keeps relics)
__brew-cask-scrubber () {
    local cask="$1"
    local caskBasePath="$(brew --prefix)/Caskroom"
    local caskDirectory="$caskBasePath/$cask"
    local versionsFound="$(ls -1 $caskDirectory/.metadata | grep -v config.json | sort -rV)"
    local versionToKeep="$(echo $versionsFound | sed 1q)"
    local versionsToRemove="$(echo $versionsFound | sed 1,1d | sort -V)"
    if [[ -z "$versionsToRemove" ]]; then
        echo "Cask $cask is already clean."
        return
    fi
    echo "Cleaning cask $cask ..."
    if echo "$versionsFound" | grep -q latest; then
        echo "WARNING: Contains version 'latest', check that version to keep is identified correctly."
    fi
    echo "Keeping: $versionToKeep"
    echo "Removing: $(echo $versionsToRemove | xargs)"

    echo -n "OK to proceed [y/n]? "
    read answer </dev/tty
    if ! echo "$answer" | grep -iq "^y" ; then
        echo "Aborted."
        return
    fi

    if [[ -n ${versionsToRemove} ]]; then
        pushd $caskDirectory >/dev/null
        while read version ; do
            echo "Removing ${cask} ${version} ..."
            rm -rf "${version}"
            rm -rf ".metadata/${version}"
        done <<< "$versionsToRemove"
        popd >/dev/null
    fi
}

# TODO: change to pass $(brew list --cask --versions <args>) output as param to __cask-scrub
# delete old relics, for some or all casks
brew-cask-scrub () {
    local casks
    if [[ $# -eq 0 ]]; then
        echo -n "Scrub ALL installed casks (interactive) [y/n]? "
        read answer </dev/tty
        if ! echo "$answer" | grep -iq "^y" ; then
            echo "Aborted."
            return
        fi
        casks="$(brew list --cask -1)"
    else
        casks="$(echo "$@" | tr -s '[:space:]' '\n')"
    fi
    while read line; do
      __brew-cask-scrubber "${line}"
    done <<< "$casks"
}

