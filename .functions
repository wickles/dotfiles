#!/bin/bash
### shell-ambiguous functions
UNAME_OS="$(uname -s)"
# MacOS -> Darwin
# Linux -> Linux
# Cygwin -> CYGWIN_NT-(X.Y)
# MinGW -> MINGW(32/64)-(X.Y)
# MSYS -> MSYS_NT-(X.Y)

# define colorized 'ls', being careful about OS distinctions
case "$OSTYPE" in
    darwin* | bsd* )
        alias ls='/bin/ls -G' ;;
    #linux*) echo "LINUX" ;;
        #bsd*) echo "BSD" ;;
        #solaris*) echo "SOLARIS" ;;
    *)
        alias ls='ls --color=auto' ;;
esac


## miscellaneous

alias please='sudo '
alias fucking='sudo '
alias get-shell='ps -o command | grep -v -e "\<ps\>" -e grep -e tail | tail -1'
alias wget-test="wget -O /dev/null"
alias speedtest-cachefly="wget-test http://cachefly.cachefly.net/100mb.test"
alias speedtest-tele2="wget-test http://speedtest.tele2.net/100MB.zip"

# setup environment variables for ROOT
alias src-root='pushd $(root-config --prefix) >/dev/null; source bin/thisroot.sh; popd >/dev/null'
# MySQL DB size query
alias mysql-df="mysql -e 'SELECT table_schema \"database\", sum(data_length + index_length)/1024/1024 \"size in MB\" FROM information_schema.TABLES GROUP BY table_schema;'"

# run to fix environment in a tmux pane
# https://raim.codingfarm.de/blog/2013/01/30/tmux-update-environment/
tmux-update-env () {
    local v
    while read v; do
        if [[ $v == -* ]]; then
            unset ${v/#-/}
        else
            # Add quotes around the argument
            if [[ -n "$ZSH_NAME" ]]; then
                v=${v:s/=/=\"}
                v=${v}\"
            else
                v=${v/=/=\"}
                v=${v/%/\"}
            fi
            eval export $v
        fi
    done < <(tmux show-environment)
}


## Mac specific fuctions

# macOS fixes
# fix app store being retarded by killing all the shit
alias fix-appstore="pkill storedownload storeasset storeacc storeuid storeleg storeinst"
# fix Dock and/or Launchpad
alias fix-dock="killall Dock"
# reload hosts file -- must be run with sudo
alias reload-hosts="dscacheutil -flushcache; killall -HUP mDNSResponder"
# use in case PDF is registered to an app other than Preview (e.g. Skim)
alias Preview="open -aPreview"


## brew-cask alternative/new functions
alias brew-cask-upgrade="brew cask install --force"
alias brew-cask-outdated="brew cask outdated --greedy --verbose | grep -v latest"
alias brew-cask-outdated-latest="brew cask outdated --greedy --verbose | grep --color=never latest"

brew-cask-installed () {
    local installed=$(brew cask list --versions)
    if [ -z "$1" ]; then
        echo "$installed"
    else
        for app in "$@"; do
            echo "$installed" | grep "$app"
        done
    fi
}

