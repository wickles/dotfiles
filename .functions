#!/bin/bash
### shell-ambiguous functions

# define colorized 'ls', being careful about OS distinctions
case "$OSTYPE" in
	darwin* | bsd* )
		alias ls='/bin/ls -G' ;;
	#linux*) echo "LINUX" ;;
	#bsd*) echo "BSD" ;;
	#solaris*) echo "SOLARIS" ;;
	*)
		alias ls='ls --color=auto' ;;
esac


## miscellaneous

alias please='sudo '
alias fucking='sudo '
alias wget-test="wget -O /dev/null"
alias speedtest-cachefly="wget-test http://cachefly.cachefly.net/100mb.test"
alias speedtest-tele2="wget-test http://speedtest.tele2.net/100MB.zip"

# run "tmux-update-env-*" to fix environment in a tmux pane
# https://raim.codingfarm.de/blog/2013/01/30/tmux-update-environment/
tmux-update-env () {
    local v
    while read v; do
        if [[ $v == -* ]]; then
            unset ${v/#-/}
        else
            # Add quotes around the argument
            v=${v/=/=\"}
            v=${v/%/\"}
            eval export $v
        fi
    done < <(tmux show-environment)
}

tmux-update-env-zsh () {
    local v
    while read v; do
        if [[ $v == -* ]]; then
            unset ${v/#-/}
        else
            # Add quotes around the argument
            v=${v:s/=/=\"}
            v=${v}\"
            eval export $v
        fi
    done < <(tmux show-environment)
}


## Mac specific fuctions

# macOS fixes
# fix app store being retarded by killing all the shit
alias fix-appstore="pkill storedownload storeasset storeacc storeuid storeleg storeinst"
# fix Dock and/or Launchpad
alias fix-dock="killall Dock"
# reload hosts file -- must be run with sudo
alias reload-hosts="dscacheutil -flushcache; killall -HUP mDNSResponder"

# commands for brew/cask stuff
alias brew-cask-upgrade="brew cask install --force"

# setup desired version of root
alias set-root5-bash="source \$(brew --prefix root)/libexec/thisroot.sh"
alias set-root5-zsh="pushd \$(brew --prefix root) >/dev/null; source libexec/thisroot.sh; popd >/dev/null"
alias set-root6-bash="source \$(brew --prefix root6)/libexec/thisroot.sh"
alias set-root6-zsh="pushd \$(brew --prefix root6) >/dev/null; source libexec/thisroot.sh; popd >/dev/null"

# new functions for cask
brew-cask-installed () {
    local installed=$(brew cask list --versions)
    if [ -z "$1" ]; then
        echo "$installed"
    else
        for app in "$@"; do
            echo "$installed" | grep "$app"
        done
    fi
}

brew-cask-outdated () {
    local installed=$(brew cask list --versions)
    local warn=""
    # if no arguments provided
    if [ -z "$1" ]; then
        echo "$installed" | while read line; do
            local app=$(echo $line | awk '{print $1;}')
            local latest=$(brew cask _stanza version $app)
            local tests=$(echo $line | grep $latest)
            if [ -z "$tests" ]; then
                echo "$line < $latest"
            fi
            if [ -n "$(echo $latest | grep latest)" ]; then # || [ -n "$(echo $line | grep latest)" ]; then
                warn=$(echo "$warn"; echo "$line <= $latest")
            fi
       done
    # if arguments provided
    else
        for app in "$@"; do
            local latest=$(brew cask _stanza version $app)
            local line=$(echo "$installed" | grep $app)
            local tests=$(echo $line | grep $latest)
            if [ -z "$tests" ]; then
                echo "$line < $latest"
            fi
            if [ -n "$(echo $latest | grep latest)" ]; then # || [ -n "$(echo $line | grep latest)" ]; then
                warn=$(echo "$warn"; echo "$line <= $latest")
            fi
        done
    fi
    if [ -n "$warn" ]; then
        printf "NOTICE: some latest versions matched 'latest'"
        echo "$warn"
    fi
}

